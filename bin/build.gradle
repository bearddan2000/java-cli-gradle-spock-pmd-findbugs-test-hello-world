plugins {
    // we don’t need to *apply* the plugin to the root project, do we?
    id 'pmd'
}
plugins {
    // we don’t need to *apply* the plugin to the root project, do we?
    id 'com.github.spotbugs' version '4.7.0' apply false
}
apply plugin: 'groovy'
apply plugin: 'application'

// Spock works with Java 1.8 and above
sourceCompatibility = 1.8

repositories {
  // Spock releases are available from Maven Central
  mavenCentral()
  // Spock snapshots are available from the Sonatype OSS snapshot repository
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

test {

    useJUnitPlatform()

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
  implementation "org.codehaus.groovy:groovy:3.0.8"
  testImplementation platform("org.spockframework:spock-bom:2.0-groovy-3.0")
  testImplementation "org.spockframework:spock-core"
	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
	testImplementation 'org.slf4j:slf4j-api:1.7.7'
}


apply plugin: 'com.github.spotbugs'
spotbugs {
    toolVersion = '4.2.2'
    reportsDir = file("$project.buildDir/reports/findbugs")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// Configure PMD.
pmd {
    ignoreFailures = true
    toolVersion = "6.23.0"                             // The version of PMD to use.
    ruleSetFiles = files("config/pmd/pmd.xml")         // The location of the configuration file.
    ruleSets = []                                      // Ignore the default rules. The ones this config
                                                       // uses are set with the ruleSetFiles property.
}
